int[][] array2d = new int[3][4];
boolean[][] revealed;
int rows = array2d.length;
int cols = array2d[0].length;
int w,h;

boolean[][] matched;  
int[] firstClick = {-1, -1}; 
int[] secondClick = {-1, -1}; 
boolean isChecking = false;
int revealTime = 1000; 
int lastClickTime = 0;

void setup() {
    size(500, 500);
    textSize(28);
    textAlign(CENTER, CENTER); 
    
    w = width / cols;
    h = height / rows;
    
    revealed = new boolean[rows][cols];
    matched = new boolean[rows][cols];
    
    addNum(array2d);
    
    shuffle2dArray(array2d,rows,cols);
    
}

void draw(){
    background(255);
    grid_line(cols,rows,w,h);
    number_display();
    
    if (isChecking && millis() - lastClickTime >= revealTime) {
        checkMatch();
    }    
}

void grid_line(int cols,int rows,int w,int h){
     for(int i = 0; i < rows; i++){
        for(int j =0; j < cols; j++){
            line(j*w,0,j*w,height);     
        }
        line(0,i*h,width,i*h);
    }
}

void text_number(int num, int x, int y){
    fill(0);
    text(num,x,y);
}

void number_display(){
        for(int i = 0; i < rows; i++){
        for(int j =0; j < cols; j++){
            int x = (j * w) + (w / 2);
            int y = (i * h) + (h / 2); 
            int num = array2d[i][j];
            
            if (revealed[i][j]) {
                text_number(num,x,y);
            }
        }
    }
}

void mousePressed() {
    int j = mouseX / w;
    int i = mouseY / h;
    
    if (i >= rows || j >= cols || matched[i][j] || revealed[i][j] || isChecking) {return; } 

    if (firstClick[0] == -1) {
        firstClick[0] = i;
        firstClick[1] = j;
        revealed[i][j] = true;
    } else if (secondClick[0] == -1 && (i != firstClick[0] || j != firstClick[1])) {
        secondClick[0] = i;
        secondClick[1] = j;
        revealed[i][j] = true;
        isChecking = true;
        lastClickTime = millis(); 
    }
}

void checkMatch() {
    int i1 = firstClick[0], j1 = firstClick[1];
    int i2 = secondClick[0], j2 = secondClick[1];


    if (array2d[i1][j1] == array2d[i2][j2]) {
        matched[i1][j1] = true;
        matched[i2][j2] = true;
    } else {
        revealed[i1][j1] = false;
        revealed[i2][j2] = false;
    }

    
    firstClick[0] = -1;
    firstClick[1] = -1;
    secondClick[0] = -1;
    secondClick[1] = -1;
    isChecking = false;
}

void addNum(int[][] array) {
    stroke(0);
    strokeWeight(1);
    int num = 1; 

    for (int i = 0; i < array.length; i++) {
        for (int j = 0; j < array[i].length; j++) {
            array[i][j] = num; 
            if(j%2 != 0){
              num++;
            }
        }
    }
}

void shuffle2dArray(int[][] array,int rows,int cols) {
  
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
          int randomRow = int(random(rows));
          int randomCol = int(random(cols));
      
          int temp = array[i][j];
          
          array[i][j] = array[randomRow][randomCol];
          array[randomRow][randomCol] = temp;
    }
  }  
}
