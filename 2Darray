int[][] array2d = new int[3][4];
boolean[][] revealed;
int rows = array2d.length;
int cols = array2d[0].length;
int w,h;

void setup() {
    size(500, 500);
    textSize(28);
    textAlign(CENTER, CENTER); 
    
    w = width / cols;
    h = height / rows;
    
    revealed = new boolean[rows][cols];
    
    addNum(array2d);
    
    shuffle2dArray(array2d,rows,cols);
    
}

void draw(){
    background(255);
    grid_line(cols,rows,w,h);
    number_display();
}

void grid_line(int cols,int rows,int w,int h){
     for(int i = 0; i < rows; i++){
        for(int j =0; j < cols; j++){
            line(j*w,0,j*w,height);     
        }
        line(0,i*h,width,i*h);
    }
}

void text_number(int num, int x, int y){
    fill(0);
    text(num,x,y);
}

void number_display(){
        for(int i = 0; i < rows; i++){
        for(int j =0; j < cols; j++){
            int x = (j * w) + (w / 2);
            int y = (i * h) + (h / 2); 
            int num = array2d[i][j];
            
            if (revealed[i][j]) {
                text_number(num,x,y);
            }
        }
    }
}

void mousePressed() {

    int j = mouseX / w;
    int i = mouseY / h;
    
    revealed[i][j] = true;
}

void addNum(int[][] array) {
    stroke(0);
    strokeWeight(1);
    int num = 1; 

    for (int i = 0; i < array.length; i++) {
        for (int j = 0; j < array[i].length; j++) {
            array[i][j] = num; 
            if(j%2 != 0){
              num++;
            }
        }
    }
}

void shuffle2dArray(int[][] grid,int rows,int cols) {
  
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
          int randomRow = int(random(rows));
          int randomCol = int(random(cols));
      
          int temp = grid[i][j];
          
          grid[i][j] = grid[randomRow][randomCol];
          grid[randomRow][randomCol] = temp;
    }
  }  
}
